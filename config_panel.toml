version = "1.0"

[appservice]
name = "Homeserver Application Service"
services = ["__APP__"]

    [appservice.config]
    name = "Appservice Settings"

        [appservice.config.async_media]
        ask = "Does the homeserver support https://github.com/matrix-org/matrix-spec-proposals/pull/2246?"
        type = "boolean"
        yes = "true"
        no = "false"
        help = "Enables asynchronous media uploads"
        bind = ":__FINALPATH__/config.yaml"

        [appservice.config.ephemeral_events]
        ask = "Receive Ephemeral Events via Appservice transactions?"
        type = "boolean"
        yes = "true"
        no = "false"
        help = "Requires MSC2409 support (i.e. Synapse 1.22+). You should disable bridge -> sync_with_custom_puppets when this is enabled"
        bind = ":__FINALPATH__/config.yaml"

        [appservice.config.print_level]
        ask = "Logging print level (stdout/stderr)"
        type = "select"
        choices = ["debug", "info", "warn", "error", "fatal"]
        help = "Minimum severity for log messages printed to stdout/stderr. This doesn't affect the log file."
        bind = ":__FINALPATH__/config.yaml"

    [appservice.bot]
    name = "Robot Settings"

        [appservice.bot.botname]
        ask = "Username of the Appservice Bot"
        type = "string"
        help = "Sets bot username. Please keep in mind that the bot admin room for previous bot username will stop working so you may need to create a new one using the new username"
        bind = ":__FINALPATH__/config.yaml"

        [appservice.bot.displayname]
        ask = "Display name for Bot"
        type = "string"
        help = "Set to 'remove' to remove display name, leave empty to leave display name as-is"
        bind = ":__FINALPATH__/config.yaml"

        [appservice.bot.avatar]
        ask = "Avatar for Bot"
        type = "string"
        help = "Set to 'remove' to remove avatar, leave empty to leave avatar as-is"
        bind = ":__FINALPATH__/config.yaml"

    [appservice.metrics]
    name = "Prometheus Metrics"

        [appservice.metrics.enable_metrics]
        ask = "Enable Prometheus Metrics?"
        type = "boolean"
        yes = "true"
        no = "false"
        bind = ":__FINALPATH__/config.yaml"

        [appservice.metrics.metrics_listen_port]
        ask = "IP and Port for the Metrics listener?"
        type = "string"
        help = "Defaults to: '127.0.0.1:8001'. The path is always /metrics"
        bind = ":__FINALPATH__/config.yaml"

[whatsapp]
name = "WhatsApp"
help = "Configuration for metadata that are sent to WhatsApp"
services = ["__APP__"]

    [whatsapp.config]
    name = "Web API MetaData"

        [whatsapp.config.os_name]
        ask = "Device name in the 'WhatsApp Web' section of the smartphone app"
        type = "string"
        bind = ":__FINALPATH__/config.yaml"

        [whatsapp.config.browser_name]
        ask = "Browser name that determines the logo shown in the smartphone app"
        type = "select"
        choices = ["unknown", "chrome", "firefox", "ie", "opera", "safari", "edge", "desktop", "ipad", "android_tablet", "ohana", "aloha", "catalina", "tcl_tv"]
        help = "Must be 'unknown' for a generic icon or a valid browser name if you want a specific logo"
        bind = ":__FINALPATH__/config.yaml"

[bridge]
name = "Bridge"
services = ["__APP__"]

    [bridge.config]
    name = "Puppet Settings"

        [bridge.config.username_template]
        ask = "Localpart template of MXIDs for WhatsApp users"
        type = "string"
        help = "{{.}} is replaced with the phone number of the WhatsApp user"
        bind = ":__FINALPATH__/config.yaml"

        [bridge.config.enable_relaybot]
        ask = "Should Relay mode be allowed?"
        type = "boolean"
        yes = "true"
		no = "false"
        help = "If allowed, `!wa set-relay` can be used to turn any authenticated user into a RelayBot for that chat."
        bind = ":__FINALPATH__/config.yaml"

        [bridge.config.admin_only]
        ask = "Should only Bridge Admins be allowed to set themselves as relay users?"
        type = "boolean"
        yes = "true"
		no = "false"
        help = "See User management -> Admins"
        bind = ":__FINALPATH__/config.yaml"

    [bridge.portal_rooms]
    name = "Portal Rooms & Encryption Settings"

        [bridge.portal_rooms.encryption]
        ask = "Allow End-to-Bridge (e2b) Encryption?"
        type = "boolean"
        yes = "true"
		no = "false"
        help = "For the Bridge to work in group chat Rooms with End-to-End Encryption (e2ee) enabled."
        bind = ":__FINALPATH__/config.yaml"
        
        [bridge.portal_rooms.encryption_default]
        ask = "Force-enable Encryption in all Portal Rooms the Bridge creates?"
        type = "boolean"
        yes = "true"
		no = "false"
        help = "This will cause the Bridge Bot to be in private chats for the Encryption to work properly."
        bind = ":__FINALPATH__/config.yaml"

        [bridge.portal_rooms.encryption_require]
        ask = "Require encryption?"
        type = "boolean"
        yes = "true"
        no = "false"
        help = "Require encryption, drop any unencrypted messages."
        bind = ":__FINALPATH__/config.yaml"

[usermanagement]
name = "Bridge Permissions"
services = ["__APP__"]

    [usermanagement.config]
    name = "User, Admin, Relay Management"

        [usermanagement.config.helptext]
        ask = '''
        Allowed values:
        - * : All Matrix users
        - domain.tld : All users on a given homeserver
        - mxid (@user:matrix.org) : Specific Matrix user
        '''
        type = "markdown"

        [usermanagement.config.listuser]
        ask = "Users"
        type = "tags"
        visible = "role == 'user'"

        [usermanagement.config.listadmin]
        ask = "Admins"
        type = "tags"
        visible = "role == 'admin'"

        [usermanagement.config.listrelay]
        ask = "Relay users"
        type = "tags"
        visible = "role == 'relay'"

        [usermanagement.config.role]
        ask = "Role"
        type = "select"
        choices = ["user", "admin", "relay"]

[privacy]
name = "Privacy"
services = ["__APP__"]

    [privacy.config]
    name = "Privacy Settings"

        [privacy.config.delivery_receipts]
        ask = "Enable Delivery Receipts?"
        type = "boolean"
        yes = "true"
        no = "false"
        help = "Should the bridge send a read Receipt from the bridge bot when a message has been sent to WhatsApp?"
        bind = ":__FINALPATH__/config.yaml"

        [privacy.config.send_presence_on_typing]
        ask = "Send Presence on typing?"
        type = "boolean"
        yes = "true"
        no = "false"
        help = "Send the Presence as 'available' to whatsapp when users start typing on a portal."
        bind = ":__FINALPATH__/config.yaml"

        [privacy.config.url_previews]
        ask = "Enable URL preview?"
        type = "boolean"
        yes = "true"
        no = "false"
        help = "Should the bridge detect URLs in outgoing messages, ask the homeserver to generate a preview, and send it to WhatsApp?"
        bind = ":__FINALPATH__/config.yaml"
